//Leency & Veliant -=- KolibriOS Team -=- 2012
//GNU GPL licence.

//копировать через поток
//IF (strcmp(#path+strlen(#path)-1,"/")<>0) copystr("/",#path+strlen(#path)); //если нет, + "/" перенестив опендир
//иконка действительно нужна другая для неизвесных устройств и папок в будующем.

#include "lib\kolibri.h"
#include "lib\memory.h"
#include "lib\edit_box_lib.h"
#include "lib\file_system.h"
#include "imgs\toolbar.txt"
#include "imgs\left_p.txt"

int BUTTON_HEIGHT=18;

//for OpenDir
#define ONLY_SHOW	0
#define WITH_REDRAW	1
#define ONLY_OPEN	2

//переменные
#define title "Eolite File Manager v1.33"
dword selection_col = 0x94AECE;
dword lpanel_col = 0x00699C;


/*
int  f_visible,
     f_count,
     f_first,
     f_current;
*/
	 
int  but_num,
     count,
     za_kadrom,
     curbtn;
	 
	 
byte cut_active,
     rename_active,
     del_active;
byte show_actions=1,
     show_dev_name=1,
     sort_num=2,
     isdir;
char path[4096],
     edit_path[4096],
     file_path[4096],
     file_name[4096],
     copy_file[4096],
     temp[4096];
int scroll_size;



int toolbar_buttons_x[6]={9,46,85,134,167,203};

dword file_mas[6898];
int j, i, mouse_dd;

struct path_string {
char Item[4096];
};


dword stak[100]; //окно About 

edit_box edit1= {250,247,13,0xffffff,0x94AECE,0xD3DDEB,0xffffff,0,248,#edit_path,#mouse_dd,64,6,6};
edit_box edit2= {250,213,80,0xFFFFCC,0x94AECE,0xFFFFCC,0xffffff,0,248,#file_name,#mouse_dd,64,6,6};

proc_info Form;
dword buf, off; //для текста и буфера

#include "include\about_dialog.h"
#include "include\some_code.h"
#include "include\sorting.h"
#include "include\icons_f.h"
#include "include\ini.h"
#include "include\devices.h"
#include "include\history.h"

void main() 
word key, id; 
mouse m;
int scroll_used=0;
{
	load_editbox_lib();
	GetSystemDiscs();
	GetIni(1);
	
	edit1.shift_color=selection_col;
	edit2.shift_color=selection_col;
	
	if (param)
	{
		copystr(#param, #path);
		if (strcmp(#path+strlen(#path)-1,"/")<>0) copystr("/",#path+strlen(#path)); //если нет, + "/"
	}
	else
		copystr("/rd/1/", #path);
		
	Open_Dir(#path,ONLY_OPEN);
	loop()	switch(WaitEvent())
	{
		case evMouse:
				IF (del_active) break;
				
				id=GetSlot(Form.ID); 
				IF (id<>ActiveProcess()) break; //если окно не активно на события мыши не реагируем
				
				IF (!rename_active) edit_box_mouse stdcall(#edit1); ELSE edit_box_mouse stdcall(#edit2);
				
				m.get();

				if (m.x>=Form.width-26) && (m.x<=Form.width-6) && (m.y>40) && (m.y<57)
				{
					IF (m.lkm==1) DrawRegion_3D(onLeft(26,0),41,14,14,0xC7C7C7,0xFFFFFF);
					WHILE (m.lkm==1) && (za_kadrom>0)
					{
						Pause(10);
						za_kadrom--;
						List_ReDraw();
						m.get();
					}
					DrawRegion_3D(onLeft(26,0),41,14,14,0xFFFFFF,0xC7C7C7);
				}

				if (m.x>=Form.width-26) && (m.x<=Form.width-6) && (m.y>onTop(22,0)+1) && (m.y<onTop(22,0)+16)
				{
					IF (m.lkm==1) DrawRegion_3D(onLeft(26,0),onTop(21,0),14,14,0xC7C7C7,0xFFFFFF);
					while (m.lkm==1) && (za_kadrom<count-but_num)
					{
						Pause(10);
						za_kadrom++;
						List_ReDraw();
						m.get();
					}
					DrawRegion_3D(onLeft(26,0),onTop(21,0),14,14,0xFFFFFF,0xC7C7C7);
				}

				//колёсико мыши
				IF (m.vert==65535) && (za_kadrom>0)
				{
					if (za_kadrom>0) za_kadrom--;
					if (curbtn<but_num-1) curbtn++;
					List_ReDraw();
					if (za_kadrom>0) za_kadrom--;
					if (curbtn<but_num-1) curbtn++;
					List_ReDraw();
				}
				IF (m.vert==1) && (za_kadrom<count-but_num)
				{
					if (za_kadrom<count-but_num) za_kadrom++;
					if (curbtn>0) curbtn--;
					List_ReDraw();
					if (za_kadrom<count-but_num) za_kadrom++;
					if (curbtn>0) curbtn--;
					List_ReDraw();
				}
				//скролл
				if (!m.lkm) scroll_used=0;
				if (m.x>=Form.width-26) && (m.x<=Form.width-6) && (m.y>56) && (m.y<Form.height) && (m.lkm) scroll_used=1;
				
				if (scroll_used)
				{
					IF (scroll_size/2+57>m.y) || (m.y<0) || (m.y>4000) m.y=scroll_size/2+57; //если курсор над окном
					id=za_kadrom; //сохраняем старое количество
					j= scroll_size/2;
					za_kadrom = m.y -j -57 * count;
					za_kadrom /= onTop(22,57);
					IF (but_num+za_kadrom>count) za_kadrom=count-but_num;
					IF (id<>za_kadrom) List_ReDraw(); //чтоб лишний раз не перерисовывать
				}
				break;  
//Button pressed-----------------------------------------------------------------------------
		case evButton:
				id=GetButtonID();
				IF (id==1) ExitProcess();

				IF (del_active)
				{
					IF (id==301) || (id==302) Del_File(302-id);
					break;
				}
				switch(id) 
				{
					case 21: //Back
							GoBack();
							break;
					case 22: //Forward
							if (HistoryPath(GO_FORWARD))
							{
								za_kadrom=curbtn=0; //вверх списка
								Open_Dir(#path,WITH_REDRAW);
							}
							break;
					case 23: //up!
							Dir_Up();
							break;
					case 24: //cut
							key=24; 
					case 25: //copy
							goto CTRLC_MARK;
					case 26: //paste
							Paste();
							break;
					case 27: //goto edit_path
							Goto_edit_path();
							break; 
					case 31...33: //sort
							IF(sort_num==1) DrawBar(onLeft(192,168)/2+210,45,6,9,0xE4DFE1);
							IF(sort_num==2) DrawBar(onLeft(115,0),45,6,9,0xE4DFE1);
							IF(sort_num==3) DrawBar(onLeft(44,0),45,6,9,0xE4DFE1);
							sort_num=id-30;
							Open_Dir(#path,1);
							break; 
					case 30: //about
							CreateThread(#about_dialog,#stak); 
							break;
					case 77:
							IF (show_actions==1) show_actions=0; ELSE show_actions=1;
							Actions();
							break;
					case 78:
							IF (show_dev_name==1) show_dev_name=0; ELSE show_dev_name=1;
							GetSystemDiscs();
							Open_Dir(#path,WITH_REDRAW);
							DrawSystemDiscs();
							Actions();
							break;
					case 80: //rename
							goto REN_MARK; 
					case 81: //Delete file
							Del_Form();
							break;
					case 82: //create folder
						NEW_FOLDER_MARK:
							copystr(#path, #temp);
							copystr("New folder", #temp+strlen(#temp));
							CreateFolder(#temp);
							IF (EAX==0){
								SelectFile("New folder");
								goto REN_MARK;
							}
							ELSE
							{
								Write_Error(EAX);
								ShowMessage("Folder can not be created.");
							}
							break;
					case 100...120:
						DEVICE_MARK:
							DrawRegion_3D(17,id-100*16+74,159,16, 0, 0); //выделение
							copystr(#disk_list[id-100].Item, #path);
							za_kadrom=curbtn=0;
							Open_Dir(#path,1);
							Pause(5);
							DrawRegion_3D(17,id-100*16+74,159,16, 0xFFFFFF, 0xFFFFFF);
							break;
					default:
							if (id<200) break; //кнопки из списка файлов
							if (curbtn!=id-201)	{FileList_ReDraw(id-201-curbtn); break;}
							else
						OPEN_MARK:
							if (!isdir) GetIni(0); else
							if (!strcmp(#file_name,"..")) Dir_Up();
							else
							{
						OPEN_DEV:
									copystr(#file_path, #path);
									IF (strcmp(#path+strlen(#path)-1,"/")<>0) copystr("/",#path+strlen(#path)); //если нет, + "/"
									za_kadrom=curbtn=0;
									Open_Dir(#path,1);
							}
				}
				break;
//Key pressed-----------------------------------------------------------------------------
		case evKey:
			key = GetKey();
			IF (del_active)
			{
				IF (key==013) Del_File(true);
				IF (key==027) Del_File(false);
				break;
			}
			IF (edit1.flags<>64) && (edit1.flags<>0) && (key<>13)
			{
				EAX=key<<8;
				edit_box_key stdcall (#edit1);
				break;
			} 
			IF (edit2.flags<>64) && (key<>13) && (key<>27)
			{
				EAX=key<<8;
				edit_box_key stdcall (#edit2);
				break;
			}
			switch (key)
			{
					case 209...217:
							id=key-110;
							IF (id-100>=disc_num) break;
							GOTO DEVICE_MARK;
					case   8: //Назад
							//GoBack();
							Dir_Up();
							break; 
					case 004: //Ctrl+D рис на раб стол растянуть
							copystr("\\S__", #temp);
							copystr(#file_path, #temp+strlen(#temp));
							RunProgram("/sys/media/kiv", #temp);
							break;
					case 014: //Ctrl+N новое окно
							IF (Form.left==98) MoveSize(Form.left-20,Form.top-20,OLD,OLD);
							RunProgram("/sys/File Managers/Eolite", #path);
							break; 
					case 024: //Ctrl+X
					case 003: //Ctrl+C
							CTRLC_MARK:
							IF (isdir) break; //папки пока что копировать не умеем
							copystr(#file_path,#copy_file); //вычисляем какой файл копировать
							IF (key==24) cut_active=1; ELSE cut_active=0; 
							break;
					case 022: //Ctrl+V
							Paste();
							break;
					case 027: //Esc
							IF (rename_active==1) ReName(false);
							break;
					case 013: //Enter
							IF (rename_active==1) {ReName(true); break;}
							IF (strcmp(#path,#edit_path)<>0) Goto_edit_path();
							ELSE GOTO OPEN_MARK;
							break; 
					case 55: //F6 - new folder
							goto NEW_FOLDER_MARK;
					case 56:  //IF (rename_active==1) break;//up
					case 178: //up
							FileList_ReDraw(-1);
							break;
					case 177: //down
							FileList_ReDraw(1);
							break;
					case 180: //home
							za_kadrom=0;
							curbtn=0;
							List_ReDraw();
							break;
					case 181: //end
							za_kadrom=count-but_num;
							curbtn=but_num-1;
							List_ReDraw();
							break;
					case 183: //Page Down
							FileList_ReDraw(but_num-1);
							break;
					case 184: //Page Up
							FileList_ReDraw(-but_num+1);
							break;
					case 051: //Нажата F2
							REN_MARK:
							DeleteButton(curbtn+201); //это чтоб можно было выделять мышью
							edit2.flags=66; //делаем компонент активным
							edit2.width=onLeft(24,217);
							edit2.top=curbtn*BUTTON_HEIGHT+59;
							edit2.size=edit2.pos=strlen(#file_name);
							edit_box_draw  stdcall (#edit2);
							DrawBar(213,curbtn*BUTTON_HEIGHT+58,edit2.width+1,1,0xFFFFCC); //полоса желтая сверху для одинаковости
							rename_active=1;
							break;
					case 052: //Нажата F3
							IF (isdir==false) RunProgram("/sys/tinypad", #file_path);
							break;
					case 053: //Нажата F4
							IF (isdir==false) RunProgram("/sys/develop/heed", #file_path);
							break;
					case 054: //F5
							Open_Dir(#path,1);
							break;
					case 182: //delete file
							Del_Form();
							break; 
					default:    
							for (i=curbtn+za_kadrom+1; i<count; i++)
							{
								copystr(file_mas[i]*304+buf+72,#temp);
								AL=DSBYTE[#temp]; 
								IF(AL>='A')&&(AL<='Z')DSBYTE[#temp]=AL|0x20;
								IF (temp[0]==key)
								{
									FileList_ReDraw(i-curbtn-za_kadrom);
									break;
								}
							}
			}                         
			BREAK;
		case evReDraw:
			draw_window();
	}
}


inline fastcall void draw_window()
{	
	if (GetScreenHeight()<480)
		DefineAndDrawWindow(20,0,582,GetScreenHeight()-30,0x73,0xE4DFE1,title);
	else
		DefineAndDrawWindow(98,90,582,482,0x73,0xE4DFE1,title);
	Form.GetInfo(#Form, SelfInfo);
	IF (Form.status_window>2) return; //ничего не делать если окно схлопнуто в заголовок
	  IF (Form.height<280) MoveSize(OLD,OLD,OLD,280);
	  IF (Form.width<480) MoveSize(OLD,OLD,480,OLD);
	  
	//toolbar buttons
	PutPaletteImage(#toolbar,246,39,0,0,#toolbar_pal);
	FOR (j=0; j<3; j++) DefineButton(toolbar_buttons_x[j]+2,5+2,31-5,29-5,21+j+BT_HIDE,0xE4DFE1);
	FOR (j=3; j<6; j++) DefineButton(toolbar_buttons_x[j],5,31,29,21+j+BT_HIDE,0xE4DFE1);
	//полоса адреса
	edit1.width=Form.width-314;
	DrawBar(246,0,onLeft(246,60),12,0xE4DFE1); //фон над полосой адреса
	DrawBar(246,29,onLeft(246,60),10,0xE4DFE1); //фон под полосой адреса
	DrawRegion_3D(246,12,onLeft(66,246),16,0x94AECE,0x94AECE);	//ободок
	DefineButton(onLeft(34,0),6,27,28,30+BT_HIDE+BT_NOFRAME,0xE4DFE1); //about
	DefineButton(onLeft(66,0),12,18,16,27+BT_HIDE,0xE4DFE1); //кнопка перехода
	PutPaletteImage(#goto_about,56,40,Form.width-65,0,#goto_about_pal);
	//прямоугольники внутри
	DrawRegion_3D(1,40,Form.width-12,onTop(46,0),0x94AECE,0x94AECE); //синий ободок
	DrawRegion_3D(0,39,Form.width-10,onTop(44,0),0xE4DFE1,0xE4DFE1); //фон
	DrawSystemDiscs();
	Actions();
	//SortButtons
	DrawFlatButton(192,40,onLeft(192,168),16,31,0xE4DFE1,"File");
	DrawFlatButton(onLeft(168,0),40,73,16,32,0xE4DFE1,"Type");
	DrawFlatButton(onLeft(95,0),40,68,16,33,0xE4DFE1,"Size");
	//Перерисовываем список
	Open_Dir(#path,ONLY_SHOW);
	//прокрутка
	DrawBar(onLeft(27,0),57,1,onTop(22,57),0x94AECE); //линия слева от прокрутки 
	DrawFlatButton(onLeft(27,0),40,16,16,0,0xE4DFE1,"\x18");		//прокрутка вверх
	DrawFlatButton(onLeft(27,0),onTop(22,0),16,16,0,0xE4DFE1,"\x19");//прокрутка вниз
	if (del_active) Del_Form();
}


void KEdit()
{
	edit1.size=edit1.pos=strlen(#edit_path);
	edit1.offset=0;
	edit_box_draw  stdcall (#edit1);
}


void FileList_ReDraw(int curbtn_)
{
	if (curbtn_<=0) //вверх
	{
		IF (za_kadrom==0) && (curbtn<=0) return;
		IF (-curbtn_-1<curbtn)
		{
			Line_ReDraw(0xFFFFFF, curbtn); //белая полоса
			curbtn+=curbtn_;
			Line_ReDraw(selection_col, curbtn); //выделение
			return;
		}
		ELSE
		{
			IF (-curbtn_<za_kadrom) za_kadrom+=curbtn_; ELSE za_kadrom=0;
			curbtn=0;
			List_ReDraw();
			return;
		}
	}
	else  //вниз
	{
		IF (za_kadrom==count-but_num) && (curbtn==but_num-1) return;
		IF (but_num-curbtn>curbtn_)
		{
			Line_ReDraw(0xFFFFFF, curbtn); //белая полоса
			curbtn+=curbtn_;
			Line_ReDraw(selection_col, curbtn); //выделение
			return;
		}
		else
		{
			IF(za_kadrom+curbtn+curbtn_>=count)
			{
				za_kadrom=count-but_num;
				curbtn=curbtn_-za_kadrom+curbtn;
				}
			ELSE
			{
				za_kadrom+=curbtn_+curbtn-but_num+1;
				curbtn=but_num-1;
			}
			
			IF (curbtn<0) || (curbtn>but_num)
			{
				curbtn=but_num-1;
			}
			List_ReDraw();
		}
	}
}




void List_ReDraw()
{
	int paint_x=but_num*BUTTON_HEIGHT+57;
	IF (count-za_kadrom<but_num) || (curbtn>but_num-1) //если мы в конце списка файлов развернём окно появяться пустяе белые кнопки
	{ za_kadrom=count-but_num; curbtn=but_num-1; } //это если выделение после схлопывания окна за кадром

	FOR (j=0; j<but_num; j++) IF (curbtn<>j) Line_ReDraw(0xFFFFFF, j); ELSE Line_ReDraw(selection_col, curbtn);
		DrawBar(192,paint_x,onLeft(27,192),onTop(paint_x,6),0xFFFFFF); //заливка белым доконца
		DrawBar(onLeft(168,0),paint_x,1,onTop(paint_x,6),0xE4DFE1); //полоса серая вертикальная 1
		DrawBar(onLeft(95,0),paint_x,1,onTop(paint_x,6),0xE4DFE1); //полоса серая вертикальная 2
	TVScroll();
}

/*#include "def_file.txt" 
#define CELL_SIZE 58
void List_ReDraw()
{
	int i,
		po_gor, po_ver,
		on_xx, name_len;
	po_gor=onLeft(22,197)/CELL_SIZE;
	po_ver=onTop(57,6)/CELL_SIZE;
	for (j=0; j<po_ver; j++;) for (i=0; i<po_gor; i++;) 
	{
		if (j*po_gor+i+za_kadrom>=count)
		{
			DrawBar(i*CELL_SIZE+192,j*CELL_SIZE+57,CELL_SIZE,CELL_SIZE,0xFFFFFF);
			continue;
		}
		DefineButton(i*CELL_SIZE+192,j*CELL_SIZE+57,CELL_SIZE,CELL_SIZE,j*po_gor+i+201+BT_HIDE,0xFFFFFF);
		DrawBar(i*CELL_SIZE+192,j*CELL_SIZE+57,CELL_SIZE,CELL_SIZE,0xFFFFFF);

		off=file_mas[j*po_gor+i+za_kadrom]*304 + buf+72;
		name_len=strlen(off);
		if (name_len>9) name_len=9;
		on_xx=-name_len*3+29;
		WriteText(i*CELL_SIZE+193+on_xx,j*CELL_SIZE+57+CELL_SIZE-16,0,0,off,name_len);
		if (!TestBit(ESDWORD[off-40], 4))
			PutImage(#file32,32,32,i*CELL_SIZE+197+9,j*CELL_SIZE+57+5);
		else
			PutImage(#folder32,32,32,i*CELL_SIZE+197+9,j*CELL_SIZE+57+5);

	}
	TVScroll();
}*/


void Line_ReDraw(dword color, filenum){
	dword text_col=0, name_len,
	y=filenum*BUTTON_HEIGHT+57; //положение текста по Y
	IF (rename_active==1) ReName(false);
	DefineButton(192,y,onLeft(28,192),BUTTON_HEIGHT,201+filenum+BT_HIDE+BT_NOFRAME,color); //кнопа
	//да, я не спорю что изврат, но зато перерисовки не видно
	DrawBar(192,y,3,BUTTON_HEIGHT,color); 
	DrawBar(192+19,y,onLeft(46,192),BUTTON_HEIGHT,color); DrawBar(195,y+17,16,1,color);
	if (BUTTON_HEIGHT>18) DrawBar(195,y+18,16,BUTTON_HEIGHT-18,color);
	if (BUTTON_HEIGHT>15) DrawBar(195,y,16,BUTTON_HEIGHT-15,color); 

	off=file_mas[filenum+za_kadrom]*304 + buf+72;

	if (!TestBit(ESDWORD[off-40], 4)) //это ФАЙЛ или папка?
	{	
		copystr(off,#temp);
		Put_icon(#temp+strchr(#temp,'.'), BUTTON_HEIGHT/2-7+y, color);
		WriteText(7-strlen(ConvertSize(ESDWORD[off-8]))*6+onLeft(75,0),BUTTON_HEIGHT-6/2+y,0x80,0,ConvertSize(ESDWORD[off-8]),0); //size
	}
	else
		if (!strcmp("..",off))
			Put_icon("..", BUTTON_HEIGHT/2-7+y, color);
		else
			Put_icon("<DIR>", BUTTON_HEIGHT/2-7+y, color);

	if (TestBit(ESDWORD[off-40],1)) || (TestBit(ESDWORD[off-40],2)) text_col=0xA6A6B7; //файл скрытый или системный?

	if (color<>0xFFFfff)
	{
		isdir=TestBit(ESDWORD[off-40], 4);
		
		copystr(off,#file_name);
		copystr(#path,#file_path);
		copystr(#file_name,#file_path+strlen(#file_path)); //полный путь к файлу
		IF (text_col==0xA6A6B7) text_col=0xFFFFFF;
	}
	name_len = onLeft(215,165)/6;
	IF (strlen(off)<name_len) name_len = strlen(off);  //длинна названия файла
	WriteText(215,BUTTON_HEIGHT-6/2+y,0,text_col,off,name_len);  //имя файла
	DrawBar(onLeft(168,0),y,1,BUTTON_HEIGHT,0xE4DFE1); //полоса серая вертикальная 1
	DrawBar(onLeft(95,0),y,1,BUTTON_HEIGHT,0xE4DFE1); //полоса серая вертикальная 2
}


void Open_Dir(dword temp_, redraw){
	int errornum;
	char path_[4096],
	somelen=strlen(temp_)-1;
	
	//debug("reading directory");
	//debug(temp_);
	if (redraw<>ONLY_SHOW)
	{
		copystr(temp_, #path_);
		if (somelen) path_[somelen]=0x00;
		
		if (buf) free(buf);
    	buf = malloc(32);
		errornum=ReadDir(0, buf, #path_);
		if (errornum<>0) //ошибка при чтении папки
		{
			HistoryPath(ADD_NEW_PATH);
			GoBack();
			Write_Error(errornum);
			return;
		}
    	count = ESDWORD[buf+8];
    	buf = realloc(count * 304 + 32, buf);
		ReadDir(count, buf, #path_);
		IF (EBX>6897) && (EBX<>-1) EBX=6897; //1 на удачу ;)
		count=EBX;
	}
	if (count<>-1)
	{
		//debug("successfully \n");
		copystr(temp_,#edit_path);
		KEdit();
		HistoryPath(ADD_NEW_PATH);
		IF (!strcmp(".",buf+72)) {memmov(buf,buf+304,count-1*304); count--;} //фильтруем элемент "."
		FOR (j=0;j<but_num;j++) DeleteButton(201+j); //удаляем старые
		but_num=onTop(6,57)/BUTTON_HEIGHT;                                                                                             
		IF (count<but_num) but_num=count;
		//стрелочка сортировки
		IF (sort_num==1) WriteText(Form.width+60/2,45,0x80,0x4E78AC,"\x19",0);
		IF (sort_num==2) WriteText(Form.width-115,45,0x80,0x4E78AC,"\x19",0);
		IF (sort_num==3) WriteText(Form.width-44,45,0x80,0x4E78AC,"\x19",0);
		IF (redraw<>ONLY_SHOW) Sorting(); //для больших папок при репеинте окна
		IF (redraw<>ONLY_OPEN) List_ReDraw();
	}
	IF (count==-1) && (redraw<>ONLY_OPEN) {but_num=count=0; List_ReDraw();}
}



inline Sorting()
{
	dword k=0, l=1;
	if (!strcmp(#path,"/")) //не сортировать папки и не менять регистр в "/"
	{
		FOR(k=1;k<count;k++;) file_mas[k]=k;
		return;
	}
	FOR (j=count-1, off=count-1*304+buf+32; j>=0; j--, off-=304;)  //папки вверх, файлы вниз
	{
		TitleCase(off+40);
		if (TestBit(ESDWORD[off],4)) //папка?
		{
			file_mas[k]=j;
			k++;
		}
		else
		{
			file_mas[count-l]=j;
			l++;
		}
	}
	//Собственно сортировка: вначале папки, потом файлы
	Sort_by_Name(0,k-1);
	IF (sort_num==1) Sort_by_Name(k,count-1);
	IF (sort_num==2) Sort_by_Type(k,count-1);
	IF (sort_num==3) Sort_by_Size(k,count-1);
	//если папка ".." не первая, ставим её туда
	IF (k>0) && (strcmp(file_mas[0]*304+buf+72,"..")<>0) FOR(k=k-1; k>0; k--;) IF (!strcmp(file_mas[k]*304+buf+72,"..")) file_mas[k]><file_mas[0];
}


void Del_Form()
{
	int dform_x=Form.width/2-13;
	//типа окно
	FOR (i=5;i<11;i++) DeleteButton(201+i); //удаляем кнопки под формой
	DrawFlatButton(dform_x,160,200,80,0,0xE4DFE1, ""); //форма
	WriteText(dform_x+19,175,0x80,0,"Do you really want to delete",0);
	IF (strlen(#file_name)<28) 
		{
			WriteText(strlen(#file_name)*6+dform_x+20,190,0x80,0,"?",0);
			WriteText(dform_x+20,190,0x80,0,#file_name,0); //пишем имя
		}
	ELSE
		{
			WriteText(164+dform_x,190,0x80,0,"...?",0);
			WriteText(dform_x+20,190,0,0,#file_name,24); //пишем имя
		}
	//кнопочки
	DrawFlatButton(dform_x+20,208,70,20,301,0xFFB6B5,"Yes");
	DrawFlatButton(dform_x+111,208,70,20,302,0xC6DFC6,"No");
	del_active=1;
}

	
void Del_File(byte dodel)
{    
	int del_file_rez;
	IF (dodel==true)
	{
		del_file_rez=DeleleFile(#file_path);
		IF (del_file_rez<>0)
		{
			Write_Error(del_file_rez);
			IF (isdir==true) ShowMessage("Error. Folder isn't empty.");
			IF (isdir==false) ShowMessage("Error. Filesystem read-only.");
		}
 	}
	del_active=0;
	DeleteButton(301); DeleteButton(302); //удаляем кнопочки Yes/No
	Open_Dir(#path,1);
}    

void Paste()
{
	char new_copy_path[4096];
	int copy_rezult;
	
	IF (!copy_file) return; //отмена, еши ещё ничё не скопировали
	copystr(#path,#new_copy_path);
	copystr(#copy_file+strchr(#copy_file,'/'),#new_copy_path+strlen(#new_copy_path));
	if (!strcmp(#copy_file,#new_copy_path)) //если мы копируем и вставляем в одной и той же папке
	{
		copystr(#path,#new_copy_path);
		copystr("new_",#new_copy_path+strlen(#new_copy_path));
		copystr(#copy_file+strchr(#copy_file,'/'),#new_copy_path+strlen(#new_copy_path));
	}
	copy_rezult=CopyFile(#copy_file,#new_copy_path);
	IF (copy_rezult<>0) //ошибка
	{
		Write_Error(copy_rezult);
		DrawFlatButton(Form.width/2-13,160,200,80,0,0xFFB6B5, "Error. You can't paste here.");
		Pause(150);
	}
	IF (cut_active) //если мы выбрали вырезать
		{
			copystr(#copy_file,#file_path);
			Del_File(true);
			copy_file='';
			cut_active=0;
		}
	SelectFile(#new_copy_path+strchr(#new_copy_path,'/'));
}


void Tip(int y, dword caption, id, arrow)
{
	DrawBar(17,y,160,17,0xE4DFE1); //серое сверху
	WriteText(25,y+5,0x80,0,caption,0);
	IF (id<>0) DefineButton(159,y+1,16,16,id+BT_HIDE+BT_NOFRAME,0xE4DFE1); //кнопа для стрелки
	WriteText(165,y+5,0x80,0,arrow,0); //стрелка вниз
	DrawBar(17,y+17,160,1,0x94AECE);		//подчёркивание
}



void ReName(byte rename)
{
	int del_file_rez;
	char edit_name[256];
	rename_active=0;
	edit2.flags=64;
	DefineButton(192,curbtn*BUTTON_HEIGHT+57,onLeft(27,192),BUTTON_HEIGHT,curbtn+201+BT_HIDE+BT_NOFRAME,0xFFFFFF);
	if (rename==true)
	{
		copystr(#path,#temp);
		copystr(#file_name,#edit_name); //сохраняем новое имя файла, для того, чтобы его потом выделить
		copystr(#file_name,#temp+strlen(#temp));
		if (strcmp(#file_path,#temp)<>0) && (file_name)
		IF (isdir)
		{
			del_file_rez=DeleleFile(#file_path);
			IF (del_file_rez<>0)
			{
				Write_Error(del_file_rez);
				ShowMessage("Error. Folder isn't empty.");
				return;
			}
			ELSE CreateFolder(#temp);
			Open_Dir(#path,1);
		}
		ELSE
		{
			CopyFile(#file_path,#temp);
			Del_File(true);
		}
		SelectFile(#edit_name);
	}
	Line_ReDraw(selection_col,curbtn);
}


void Actions()
{
	int actions_y=disc_num*16;
	
	DrawBar(17,actions_y+75,160,15,lpanel_col); //синий прямоугольник - под девайсами
	DrawBar(17,show_actions*51+actions_y+108,160,onTop(show_actions*51+actions_y+108,6),lpanel_col); //синее в конце

	DeleteButton(80);
	DeleteButton(81);
	DeleteButton(82);
	
	if (!show_actions)
		Tip(actions_y+90, "Actions", 77, "\x18");
	else
	{
		Tip(actions_y+90, "Actions", 77, "\x19"); //заголовок
		DrawBar(17,actions_y+108,160,51,0xFFFFFF); //белое
		PutImage(#factions,16,44,21,actions_y+113); //иконки
		//rename file 
		DefineButton(17,actions_y+108,159,16,80+BT_HIDE,0xE4DFE1);
		WriteText(42,actions_y+113,0x80,0,"Rename file",0);
		WriteText(150,actions_y+113,0x80,0x999999,"[F2]",0);
		//delete file
		DefineButton(17,actions_y+125,159,16,81+BT_HIDE,0xE4DFE1);
		WriteText(42,actions_y+130,0x80,0,"Delete file",0);
		WriteText(144,actions_y+130,0x80,0x999999,"[Del]",0);
		//create folder
		DefineButton(17,actions_y+142,159,16,82+BT_HIDE,0xE4DFE1);
		WriteText(42,actions_y+147,0x80,0,"Create folder",0);
		WriteText(150,actions_y+147,0x80,0x999999,"[F6]",0);
	}
}



void Goto_edit_path()
{
	IF (!strcmp(#path,#edit_path)) return; //проверка не в этой ли мы папке
 	IF (strcmp(#edit_path+strlen(#edit_path)-1,"/")<>0) copystr("/",#edit_path+strlen(#edit_path)); //если нет, + "/"
	Open_Dir(#edit_path,ONLY_OPEN); //проверяем если файлы в папке, так мы узнаём существует ли она
	IF (count<1)  
		KEdit(); //просто очищаем полосу адреса
	ELSE
	{
		za_kadrom=curbtn=0; //наверх списка
		copystr(#edit_path,#path);
	}
	Open_Dir(#path,1);
}

void SelectFile(dword that_file)
{
	za_kadrom=curbtn=0; //вверх списка
   	Open_Dir(#path,ONLY_OPEN);
	TitleCase(that_file);
	for (i=count-1; i>=0; i--;)
		if (!strcmp(file_mas[i]*304+buf+72,that_file)) break;
	FileList_ReDraw(i);
	List_ReDraw();
}


void Dir_Up()
{
	char cur_folder[4096];
	if (!strcmp(#path,"/")) return;
	i=strlen(#path)-1;
	path[i]=0x00;
	do i--; while (path[i]<>'/'); copystr(#path+i+1,#cur_folder); 
	path[i+1]=0x00;
	SelectFile(#cur_folder);
}


inline fastcall void GoBack()   //вначале удаляем текущий путь, а потом копируем то, что осталось
{
	char cur_folder[4096];
	copystr(GetCurrentFolder(), #cur_folder);
	if (HistoryPath(GO_BACK))
		SelectFile(#cur_folder);
}


stop:
