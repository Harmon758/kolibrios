//http://jsbeautifier.org/
//Web-component, Leency & Veliant 2007-2009
//lev


//идея - левые файлы открывать соответствующими прогами
//wintodos(buf); -> в парсе хтмл как и все кодировки
//ol - циферки

int	downloader_id;

dword j,
	buf,
	filesize,
	blink = 400;
 int i;

 char download_path[]="/rd/1/.download";
//char search_path[]="http://nova.rambler.ru/search?words=";
 char search_path[]="http://nigma.ru/index.php?s=";
 char version[]=" Text-based Browser 23.70";


struct TWebBrowser {
	int left,
	top,
	width,
	height;
	void DrawScroller();
	void Load();
	void ParseHTML(dword, dword);
	void Scan(dword);
	void WhatTextStyle(int left1, top1, width1);
};

TWebBrowser WB1;

byte rez, b_text, i_text, u_text, s_text, pre_text, blq_text, li_text, link, ignor_text, li_tab;


dword text_colors[10],
	text_color_index = 0,
	link_color;

int stroka,
	stolbec,
	tab_len;
	
char line[330],
	tag[100],
	tagparam[10000],
	parametr[1200],
	options[1000];


#include "include\history.h--"
#include "include\colors.h--"
#include "include\unicode_tags.h--"

void TWebBrowser::Scan(dword id) {
	IF (id > 399) {
		j = 0;
		FOR(i = 0; i <= id - 401; i++) {
			do j++;
			while (page_links[j] <>'|');
		}
		page_links[j] = 0x00;
		copystr(#page_links[find_symbol(#page_links, '|')], #URL);
		Load(#URL);
		Draw_Window();
		return;
	}
	//edit1.flags=64;
	IF(count < max_kolvo_strok) SWITCH(id) {
		CASE 183: CASE 184: CASE 180: CASE 181: return;
	} //если мало строк игнорируем некоторые кнопки
	switch (id)
	{
		case 011: //Ctrk+K 
			ReadHtml();
			koitodos(buf);
			break;
		case BACK:
			BrowserHistory.GoBack();
			return;
		case FORWARD:
			//RunProgram("@notify", "Forward button is not realized yet");
			return;
		case 054: //F5
			IF(edit1.flags == 66) break;
		case REFRESH:
			copystr(#URL, #editURL);
			Draw_Window();
			return;
		case 014: //Ctrl+N новое окно
		case 020: //Ctrl+T новая вкладка
		case NEWTAB:
			MoveSize(190,80,OLD,OLD);
			RunProgram(#program_path, #URL);
			return;
		case HOME:
			copystr("/sys/index.htm", #editURL);
		case GOTOURL:
		case 0x0D: //enter
			copystr(#editURL, #URL);
			Load(#URL);
			return;
		case 052:  //Нажата F3
			IF(edit1.flags <> 66) 
			IF (strcmp(get_URL_part(5),"http:")<>0) RunProgram("tinypad", #URL); ELSE RunProgram("tinypad", #download_path);
			break;
		case 173:	//ctrl+enter
		case SEARCHWEB:
			copystr(#search_path, #URL);
			copystr(#editURL, #URL + strlen(#URL));
			Load(#URL);
			return;
		case ID1: //мотаем вверх
			IF(za_kadrom > 0) za_kadrom--;
			ELSE return;
			break; 
		case ID2: //мотаем вниз
			IF(max_kolvo_strok + za_kadrom >= count) return;
			za_kadrom++;
			break; 
		case 183: //PgDown
			IF(za_kadrom == count - max_kolvo_strok) return;
			za_kadrom = za_kadrom + max_kolvo_strok + 2;
			IF(max_kolvo_strok + za_kadrom > count) za_kadrom = count - max_kolvo_strok;
			BREAK;
		case 184: //PgUp
			IF(za_kadrom == 0) RETURN;
			za_kadrom = za_kadrom - max_kolvo_strok - 2;
			IF(za_kadrom < 0) za_kadrom = 0;
			BREAK;
		case 180: //home
			IF (za_kadrom <>0) za_kadrom = 0;
			ELSE RETURN;
			BREAK; 
		case 181: //end
			za_kadrom = count - max_kolvo_strok;
			BREAK; 
		default:
			RETURN;
	}
	ParseHTML(buf, filesize);
}

//скролл
void TWebBrowser::DrawScroller() {
	dword on_y;
	DrawBar(left + width - 15, top + 17, 1, height - 34, 0x94AECE); //линия слева от прокрутки 
	DrawFlatButton(left + width - 15, top + height - 17, 16, 16, ID2, 0xE4DFE1, "\x19");
	DrawFlatButton(left + width - 15, top, 16, 16, ID1, 0xE4DFE1, "\x18");

	IF(count <= max_kolvo_strok) {
		DrawBar(left + width - 14, top + 17, 16, height - 34, 0xCED0D0);
		return;
	}

	scroll_size = height - 16 * max_kolvo_strok / count - 3;
	IF(scroll_size < 10) scroll_size = 10;
	IF(za_kadrom + max_kolvo_strok >= count) on_y = height - scroll_size + top - 17;
	ELSE on_y = height - 32 * za_kadrom / count + top + 16;
	DrawFlatButton(left + width - 15, on_y, 16, scroll_size, 0, 0xE4DFE1, ""); //ползунок
  IF(on_y > top + 17) DrawBar(left + width - 14, top + 17, 16, on_y - top - 17, 0xCED0D0); //поле до ползунка
	IF(height - scroll_size + top - 17 > on_y)
		DrawBar(left + width - 14, on_y + scroll_size + 1, 16, height - scroll_size - on_y + top - 18, 0xCED0D0); //поле после ползунка
}


void GetNewUrl(){
  IF (!strcmp(get_URL_part(2),"./")) copystr(#URL+1,#URL);
	//IF (!strcmp(get_URL_part(3),"../"))
	//{
 	//	//DrawTitle(#URL+7);
	//}
 	if (strcmp(get_URL_part(3),"/rd")<>0) && (strcmp(get_URL_part(5),"/sys/")<>0) && (strcmp(get_URL_part(3),"/hd")<>0)
	&& (strcmp(get_URL_part(3),"/bd")<>0) && (strcmp(get_URL_part(3),"/fd")<>0) && (strcmp(get_URL_part(3),"/cd")<>0)
	&& (strcmp(get_URL_part(5),"http:")<>0)	&& (strcmp(get_URL_part(5),"mailt")<>0)	&& (strcmp(get_URL_part(5),"ftp:/")<>0) 
	{
		copystr(BrowserHistory.CurrentUrl(), #editURL); //достаём адрес текущей страницы
		
		IF (editURL[find_symbol(#editURL, '/')-2]<>'/')  // если не http://pagename.ua
		{
			editURL[find_symbol(#editURL, '/')] = 0x00; //обрезаем её урл до последнего /
			IF (URL[0]=='/') copystr(#URL+1,#URL);
		}
		copystr(#URL, #editURL + strlen(#editURL)); //клеим новый адрес
		copystr(#editURL, #URL);
	}
}

void HttpLoad()
{
	DeleteFile(#download_path);
	IF (URL[strlen(#URL)-1]=='/') URL[strlen(#URL)-1]='';
	downloader_id = RunProgram("/sys/network/downloader", #URL);
	IF (downloader_id<0) RunProgram("@notify", "Error running Downloader. Internet unavilable.");
	RunProgram("/sys/network/downloader", #URL);
}

/*	if (!strcmp(get_URL_part(5),"http:"))) 
	{
		IF (DO_LOAD) && (!WindowRePaint)
		{
			HttpLoad();
			//RETURN;
		}
		file_size stdcall (#download_path);
	} 
	ELSE file_size stdcall (#URL);
*/
	
void ReadHtml(byte DO_LOAD)
{
	if (!strcmp(get_URL_part(5),"http:"))) 
		file_size stdcall (#download_path);
	else
		file_size stdcall (#URL);
	
	filesize = EBX;
	if (!filesize) /*{Pause(200); ReadHtml();}*/ return; //Lee 22.09
	mem_Free(buf);
	buf = mem_Alloc(filesize);
	ReadFile(0, filesize, buf, #URL);
}



void TWebBrowser::Load(dword adress) {
	IF (URL[0] == '#') {  //мы не умеем переходить по ссылке внутри документа. Пока что...
		copystr(#editURL, #URL);
		return;
	}

	URL[find_symbol(#URL, '#')-1] = 0x00; //заглушка, лучше, чем ничего (хабр, например, будет работать)

	GetNewUrl();

	max_kolvo_stolbcov = width - 30 / 6;
	max_kolvo_strok = height - 3 / 10 - 2;
	copystr(#version, #header);
	IF (!WindowRePaint) {
		za_kadrom = 0;
		copystr(#URL, #editURL);
		BrowserHistory.AddUrl();
	}
	edit1.size = edit1.pos = strlen(#editURL);
	edit_box_draw stdcall(#edit1); //рисуем строку адреса

	ReadHtml(LETS_LOAD);
	
	IF (!filesize) return; //Lee 22.09
	
	wintodos(buf);
	ParseHTML(buf, filesize);
	IF(!strlen(buf)) {
		IF (strcmp(get_URL_part(5),"http:")==0)
		{
			PutImage(#stop_btn, 24, 24, 88, 10);
			WriteText(left + 10, top + 18, 0x80, 0, "Loading...", 0);
		}
		ELSE
			WriteText(left + 10, top + 18, 0x80, 0, "Page not found. May be, URL contains some errors.", 0);
	}

	IF (!strcmp(#version, #header)) DrawTitle(#header);
}



void TWebBrowser::ParseHTML(dword bword, fsize){
	word bukva[1];
	byte ignor_param = 0;
	char temp[768];
	stroka = -za_kadrom;
	stolbec = 0;
	FOR(j = 400; j < blink + 1; j++;) DeleteButton(j);
	b_text = i_text = u_text = s_text = pre_text = blq_text = 
	li_text = link = ignor_text = text_color_index = text_colors[0] = li_tab = 0; //обнуляем теги
	link_color = 0x0000FF;
	blink = 400;
	line = '';
	copystr("|", #page_links);
	IF(!strcmp(#URL + strlen(#URL) - 4, ".txt")) pre_text = 1; //зачётное отображение текста 
	//IF(!strcmp(#URL + strlen(#URL) - 4, ".rtf")) pre_text = 1;
	IF(!strcmp(#URL + strlen(#URL) - 4, ".mht")) ignor_text = 1;
	IF(za_kadrom == 0) || (WindowRePaint) DrawBar(left, top, width - 15, 15, 0xFFFFFF); //закрашиваем первую строку
	for (; buf + fsize > bword; bword++;) {
	  bukva = ESBYTE[bword];
	  switch (bukva) {
		case 0x0a:
			IF(pre_text == 1) {
				bukva = '';
				temp = '';
				goto NEXT_MARK;
			}
		CASE '\9':
			if (pre_text == 1) //иначе идём на 0x0d	
			{
				tab_len=strlen(#line)/8;
				tab_len=tab_len*8;
				tab_len=8+tab_len-strlen(#line);
				for (i=0; i<tab_len; i++;) copystr(" ", #line + strlen(#line));
				break;
			}		
		case 0x0d:
			bukva = ' ';
			goto DEFAULT_MARK;
		case '<':
			bword++; //промотаем символ <
			IF(ESBYTE[bword] == '!') //фильтрация внутри <!-- -->, дерзко
			{
				bword++;
				IF(ESBYTE[bword] == '-') {
					HH_: do {
						bword++;
						IF(bword >= buf + fsize) break 1;
					} while (ESBYTE[bword] <>'-');
					bword++;
					IF(ESBYTE[bword] <>'-') GOTO HH_;
				}
			}
			WHILE (ESBYTE[bword] <>'>') && (bword < buf + fsize) //получаем тег и его параметры
			{
				bukva = ESBYTE[bword];
				IF(bukva == '\9') || (bukva == '\x0a') || (bukva == '\x0d') bukva = ' ';
				IF(!ignor_param) && (bukva <>' ') copystr(#bukva, #tag + strlen(#tag));
				ELSE {
					ignor_param = true;
					copystr(#bukva, #tagparam + strlen(#tagparam));
				}
				bword++;
			}
			lowcase(#tag);
			lowcase(#tagparam);
			//WriteDebug(#tagparam);
			//WriteDebug(#tag); Pause(50);
			//
			IF (tag[strlen(#tag)-1]=='/') tag[strlen(#tag)-1]=''; //небольшой фикс для работы с XHTML-тегами типа br/
			IF(strlen(#tagparam) > 0) && (strlen(#tagparam) < 4000) GetNextParam();
			WhatTextStyle(left + 5, stroka * 10 + top + 5, width - 20); //обработка тегов

			line = tag = parametr = tagparam = ignor_param = 0; //всё обнуляем
			break;
		case '=': //поддержка шайтанской кодировки страниц, сохранённых через ИЕ7
			IF(strcmp(#URL + strlen(#URL) - 4, ".mht")<>0) goto DEFAULT_MARK;

			bword++;
			bukva=ESBYTE[bword];
			copystr(#bukva, #temp);

			bword++;
			bukva=ESBYTE[bword];
			copystr(#bukva, #temp + strlen(#temp));
			
			bukva=Hex2Symb(#temp);
			IF (bukva) goto DEFAULT_MARK;
			break;
		/*case '\\': //поддержка rtf
			IF(strcmp(#URL + strlen(#URL) - 4, ".rtf")<>0) goto DEFAULT_MARK;

			bword++;
			IF (ESBYTE[bword] =='\'')
			{
				bword++;
				bukva=ESBYTE[bword];
				copystr(#bukva, #temp);

				bword++;
				bukva=ESBYTE[bword];
				copystr(#bukva, #temp + strlen(#temp));
				
				bukva=Hex2Symb(#temp);
				IF (bukva) goto DEFAULT_MARK;
			}
			else
			{
				FOR (j=0;   (ESBYTE[bword] <>'\\') && (buf + fsize < bword);     j++; bword++;)
				{
					bukva = ESBYTE[bword];
					copystr(#bukva, #tag + strlen(#tag));
				}
				IF ((!strcmp(#tag, "par\0x0a")) || (!strcmp(#tag, "par\0x0b"))) stroka++;
				tag='';
				bword--;
			}
			break;*/
			
		case '&': //обработка тегов типа &nbsp;
			IF(ignor_text) break;
			bword++;
			tag='';
			FOR (j=0;   (ESBYTE[bword] <>';') && (j < 7);     j++; bword++;)
			{
				bukva = ESBYTE[bword];
				copystr(#bukva, #tag + strlen(#tag));
			}
			
			FOR (j=0; unicode_tags[j]!=0; j+=2;) 
			{
				IF(!strcmp(#tag, unicode_tags[j]))
				{
					copystr(unicode_tags[j+1], #line + strlen(#line));
					break 1;
				}
			}
			
			rez = StrToInt(#tag + 1) - 1040;
			IF(tag[1] == '1') && (rez>=0) && (rez<=72) && (strlen(#tag) == 5)
				{
					bukva = unicode_chars[rez];
					GOTO DEFAULT_MARK; //обрабатываем букву
				}
			
			WriteDebug(#tag); //тэг не найден - выводим на доску отладки
			copystr(#tag, #line + strlen(#line)); //выводим на экран необработанный тег, так браузеры зачем-то делают
			break;
		default:
			DEFAULT_MARK:
			IF(ignor_text) break;
			IF(pre_text == 0) && (bukva == ' ') && (strcmp(#line + strlen(#line) - 1, " ") == 0) continue;
			//
			if (stolbec + strlen(#line) > max_kolvo_stolbcov)
			{
				copystr(#line + find_symbol(#line, ' '), #temp); //перенос по словам
				line[find_symbol(#line, ' ')] = 0x00;
				NEXT_MARK: IF(stroka - 1 > max_kolvo_strok) && (za_kadrom <>0) break 1; //уходим...
				WhatTextStyle(left + 5, stroka * 10 + top + 5, width - 20); //вывод строки
				TextGoDown(left + 5, stroka * 10 + top + 5, width - 20); //закрашиваем следущую строку
				copystr(#temp, #line);
			}
			IF(pre_text == 0) && (bukva == ' ') && (stolbec == 0) && (strlen(#line) == 0) CONTINUE;
			copystr(#bukva, #line + strlen(#line));
	  }
	}
	IF(max_kolvo_strok * 10 + 25 <= height)
		DrawBar(left, max_kolvo_strok * 10 + top + 25, width - 15, -max_kolvo_strok * 10 + height - 25, 0xFFFFFF);
	IF(stroka * 10 + 15 <= height)
		DrawBar(left, stroka * 10 + top + 15, width - 15, -stroka * 10 + height - 15, 0xFFFFFF); //закрашиваем всё до конца
	IF(za_kadrom == 0) count = stroka;
	DrawScroller(); //рисуем скролл
}


void GetNextParam()
{
	byte	kavichki = false;
	int		i = strlen(#tagparam) - 1;
	
	WHILE((i > 0) && ((tagparam[i] == '"') || (tagparam[i] == ' ') || (tagparam[i] == '\'') || (tagparam[i] == '/')))
	{
		IF (tagparam[i] == '"') || (tagparam[i] == '\'') kavichki=tagparam[i];
		tagparam[i] = 0x00;
		i--;
	}

	IF (kavichki)
	{
		i=find_symbol(#tagparam, kavichki);
		copystr(#tagparam + i, #options);
	}
	ELSE
	{
		WHILE((i > 0) && (tagparam[i] <>'=')) i--; //i=find_symbol(#tagparam, '=')+1;
		i++;
		
		copystr(#tagparam + i, #options); //копируем опцию
		WHILE (options[0] == ' ') copystr(#options + 1, #options);
	}
	tagparam[i] = 0x00;

	FOR ( ; ((tagparam[i] <>' ') && (i > 0); i--)
	{
		IF (tagparam[i] == '=') //дерзкая заглушка
		{
			//copystr(#tagparam+i+2,#options);
			tagparam[i + 1] = 0x00;
		}
	}

	copystr(#tagparam + i + 1, #parametr); //копируем параметр
	tagparam[i] = 0x00;
}



char oldtag[100];
void TWebBrowser::WhatTextStyle(int left1, top1, width1) {
	dword hr_color;

    dword image=0;
    char temp[4096];
    int w, h, img_za_kadrom=0;

	//проверяем тег открывается или закрывается
	IF(tag[0] == '/') 
	{
		rez = 0;
		copystr(#tag + 1, #tag);
	}
	ELSE
		rez = 1;

	//
	IF(!chTag("html")) {
		IF(!strcmp(#URL + strlen(#URL) - 4, ".mht")) IF (rez==0) ignor_text = 1; ELSE ignor_text = 0;
		return;
	}
	IF(!chTag("script")) || (!chTag("style")) ignor_text = rez;
	IF (ignor_text == 1) return;
	//

	if(!chTag("title")) && (!rez) && (stroka == 0)
	{
		copystr(#line, #header);
		copystr(" -", #header + strlen(#header));
		copystr(#version, #header + strlen(#header));
		DrawTitle(#header);
		return;
	}
	
	//
	IF(!chTag("q")) copystr("\"", #line + strlen(#line));
	
	//вывод на экран
	if (stroka >= 0) && (stroka - 2 < max_kolvo_strok) && (line) 
	{
		WriteText(stolbec * 6 + left1, top1, 0x80, text_colors[text_color_index], #line, 0);
		IF (b_text) WriteText(stolbec * 6 + left1 + 1, top1, 0x80, text_colors[text_color_index], #line, 0);
		IF (i_text) Skew(stolbec * 6 + left1, top1, strlen(#line)+1*6, 10); //наклонный текст
		IF (s_text) DrawBar(stolbec * 6 + left1, top1 + 4, strlen(#line) * 6, 1, text_colors[text_color_index]); //зачёркнутый
		IF (u_text) DrawBar(stolbec * 6 + left1, top1 + 8, strlen(#line) * 6, 1, text_colors[text_color_index]); //подчёркнутый
		IF (link) {
			DefineButton(stolbec * 6 + left1 - 2, top1, strlen(#line) * 6 + 3, 9, blink + BT_HIDE, 0xB5BFC9); //
			DrawBar(stolbec * 6 + left1, top1 + 8, strlen(#line) * 6, 1, text_colors[text_color_index]);
		}
	}
	//
	IF(!tag) return;
	stolbec += strlen(#line);
	////////////////////////// <body bgcolor="#000000" text="#FFFFFF">
	if (!chTag("body"))
	{
		BODY_MARK:
		
		if (strcmp(#parametr, "link=") == 0)
			link_color = GetColor(#options);
		
		/*if (strcmp(#parametr, "text=") == 0)
		{
			text_colors[0]=GetColor(#options);
		}
		
		if (strcmp(#parametr, "bgcolor=") == 0)
		{
			//text_colors[0]=GetColor(#options);
			WriteDebug("bgcolor=");
			WriteDebug(#options);
		}*/
		
		IF(tagparam) {
			GetNextParam();
			GOTO BODY_MARK;
		}		
	}
	//////////////////////////
	if (!chTag("a")) {
		IF (stroka - 1 > max_kolvo_strok) || (stroka < -2) return;
		if (rez) {
			HREF: IF(strcmp(#parametr, "href=") == 0) {
				IF(link == 1) text_color_index--; //если какой-то долбоёб не закрыл тэг
				link = 1;
				blink++;
				text_color_index++;
				text_colors[text_color_index] = link_color;
				copystr(#options, #page_links + strlen(#page_links));
				copystr("|", #page_links + strlen(#page_links));
			}
			IF(tagparam) {
				GetNextParam();
				GOTO HREF;
			}
		}
		ELSE {
			link = 0;
			IF(text_color_index > 0) text_color_index--;
		}
		return;
	}
	/////////////////////////
	if (!chTag("font"))
	{
		IF(stroka < 0) || (stroka - 1 > max_kolvo_strok) return;
		COL_MARK:
		if (strcmp(#parametr, "color=") == 0) //&& (parametr[1] == '#')
		{
			text_color_index++;
			text_colors[text_color_index] = GetColor(#options);
		}
		IF(tagparam) {
			GetNextParam();
			GOTO COL_MARK;
		}
		IF(!rez) && (text_color_index > 0) text_color_index--;
		return;
	}
	//////////////////////////
	IF(!chTag("tr")) || (!chTag("br")) {
		TextGoDown(left1, top1, width1);
		return;
	}
	IF(!chTag("div")) {
		IF(oldtag[0] <>'h') TextGoDown(left1, top1, width1);
		return;
	}
	IF(!chTag("p")) {
		IF(oldtag[0] == 'h') return;
		TextGoDown(left1, top1, width1);
		IF(rez) TextGoDown(left1, top1 + 10, width1);
		return;
	}
	////////////////////////////
	IF(!chTag("h1")) || (!chTag("h2")) || (!chTag("h3")) || (!chTag("h4")) {
		TextGoDown(left1, top1, width1);
		IF(rez) TextGoDown(left1, top1 + 10, width1);
		b_text = rez;
		copystr(#tag, #oldtag);
		return;
	} ELSE copystr("", #oldtag);
	IF(!chTag("b")) || (!chTag("strong")) || (!chTag("big")) {
		b_text = rez;
		return;
	}
	////////////////////////////
	IF(!chTag("i")) || (!chTag("em")) {
		i_text = rez;
		return;
	}	
	////////////////////////////
	if(!chTag("li")) || (!chTag("dt")) //надо сделать вложенные списки
	{
		li_text = rez;
		IF(rez == 0) return;
		TextGoDown(left1, top1, width1);
		IF(stroka > -1) && (stroka - 2 < max_kolvo_strok) IF(!chTag("li")) DrawBar(li_tab * 5 * 6 + left1 - 5, top1 + 12, 2, 2, 0);
		return;
	}
	////////////////////////////
	IF(!chTag("u")) || (!chTag("ins")) u_text = rez;
	IF(!chTag("s")) || (!chTag("strike")) || (!chTag("del")) s_text = rez;
	IF(!chTag("ul")) || (!chTag("ol")) IF(!rez) {
		li_text = rez;
		li_tab--;
		TextGoDown(left1, top1, width1);
	} ELSE li_tab++;
	IF(!chTag("dd")) stolbec += 5;
	IF(!chTag("blockquote")) blq_text = rez;
	IF(!chTag("pre")) pre_text = rez; 
	IF(!chTag("hr")) {
		TextGoDown(left1, top1, width1);
		TextGoDown(left1, top1 + 10, width1);
		IF(strcmp(#parametr, "color=") == 0) hr_color = GetColor(#options);
		ELSE hr_color = 0x999999;
		IF(stroka > 0) DrawBar(left1, top1 + 14, width1 - 8, 1, hr_color);
	}

	if (!chTag("img"))
	{
		//IF (GetFileInfo(#libimg)<>0) return;  //если библиотеки нет
		IMG_TAG:
			IF (strcmp(#parametr,"src=")==0)   //надо объединить с GetNewUrl()
	          {
				copystr(BrowserHistory.CurrentUrl(), #temp); //достаём адрес текущей страницы
				temp[find_symbol(#temp, '/')] = 0x00; //обрезаем её урл до последнего /
				copystr(#options,#temp+strlen(#temp));
				image=load_image(#temp);
	
	                w=DSWORD[image+4];
	                h=DSWORD[image+8]; 
	          }
		IF(tagparam) {
			GetNextParam();
			GOTO IMG_TAG;
		}

		if (w>width1) w=width1;
		
        if (image)
        {
			stroka+=h/10;
			
			if (top1+h<WB1.top) || (top1>WB1.top+WB1.height-10) //если ВСЁ изображение ушло ВЕРХ или ВНИЗ
				return;

			if (top1<WB1.top) //если часть изображения сверху
			{
				img_za_kadrom=WB1.top-top1;
				h=h-img_za_kadrom;
				top1=WB1.top-5;
			}
			
			if (top1>WB1.top+WB1.height-h-10) //если часть изображения снизу     IF (stroka - 2 < max_kolvo_strok)
			{
				h=WB1.top+WB1.height-top1-10;
			}	

			IF (h<=0) return;
			
			img_draw stdcall (image,left1-5,top1+10,w, h,0,img_za_kadrom);
			DrawBar(left1+w - 5, top1 + 10, width1-w + 5, h, 0xFFFFFF);
        }
		return;
	}

	if (!chTag("meta")) 
	{
		META:
		if (!strcmp(#parametr, "charset=")) || (!strcmp(#parametr, "content="))
		{
			copystr(#options[find_symbol(#options, '=')],#options); //поиск в content=

			IF (!strcmp(#options,"utf-8")) || (!strcmp(#options,"utf8"))
			{
				ReadHtml(DONT_LOAD);
				utf8rutodos(buf);
			}
			IF(!strcmp(#options, "koi8-r")) || (!strcmp(#options, "koi8-u"))
			{
				ReadHtml(DONT_LOAD);
				koitodos(buf);
			}
			IF(!strcmp(#options, "dos")) || (!strcmp(#options, "cp-866"))
			{
				ReadHtml(DONT_LOAD);
			}
		}
		IF(tagparam)
		{
			GetNextParam();
			goto META;
		}
		return;
	}
}


void TextGoDown(int left1, top1, width1) {
	stroka++;
	IF(blq_text == 1) stolbec = 8;
	ELSE stolbec = 0;
	IF(li_text == 1) stolbec = li_tab * 5;
	IF(stroka >= 0) && (stroka - 2 < max_kolvo_strok) DrawBar(left1 - 5, top1 + 10, width1 + 5, 10, 0xFFFFFF);
}