<html lang=ru>
<head>
<title>Image transform</title>
<meta charset="WINDOWS-1251">
<style type="text/css">
body
{
  font-size: 15px;
  font-family: "Bookman Old Style";
  color: black;
  text-align: justify;
}
h1 { color: green; font-size: 23px; }
h2 { color: green; font-size: 21px; }
h3 { color: green; font-size: 19px; }
h4 { color: #803f00; font-size: 17px; }
i { color: #0099cc; }
b { color: #0099cc; }
p {
  text-indent: 1em;
  margin-top: 3px;
  margin-bottom: 2px;
  margin-left: 0px;
  margin-right: 0px;
}
ol, ul, dl{
  margin-top: 3px;
  margin-bottom: 2px;
}
pre
{
  padding: 2px;
  padding-left: 20px;
  margin-top: 5px;
  margin-bottom: 5px;
  margin-left: 0px;
  margin-right: 0px;
  font-family: "Courier New";
  font-size: 15px;
  color: #004000;
  background-color: #ffd0ff;
}
table { font-size: 15px; }
</style>
</head>

<body>
<h1>Image transform 02.10.20</h1>

<h2>Оглавление</h2>
<ul>
<li>О программе</li>
<li>Панель инструментов</li>
<li>Клавиатура</li>
<li>Алгоритм работы программы</li>
<li>Автор</li>
</ul>

<h2>О программе</h2>
<p><b>Image transform</b> - программа для преобразования изображений. </p>

<p><img src="img_01.png" alt="Внешний вид программы"></p>
<p>Рис. 1. Внешний вид программы</p>

<p>Использование программы:</p>
<p>Программу можно использовать для выравнивания искаженных изображений изначально прямоугольной (квадратной) формы, для создания текстур и т.д. После открытия файла изображения нужно указать 4 точки, которые станут углами преобразованного изображения. Для выбора точки нужно навести курсор мыши в нужное место и нажать на клавиатуре цифру от 1 до 4, в зависимости от того какую точку нужно установить в выбранное место. Также можно передвигать точки перетаскиванием мышей. Для более точной установки координат можно выделить точку нажатием на ней курсором мыши, а потом курсорами на клавиатуре двигать точку в нужное место.</p>

<p><img src="img_02.png"></p>
<p>Рис. 2. Окно с исходным изображением</p>

<p><img src="img_03.png"></p>
<p>Рис. 3. Окно с преобразованным изображением</p>

<h2>Панель инструментов</h2>
<p><img src="but_01.png"> открытие файла.</p>
<p><img src="but_02.png"> сохранение файла.</p>
<p><img src="but_03.png"> выбор режима просмотра. Выбирается один из 2-х режимов: исходное или преобразованное изображение.</p>
<p><img src="but_04.png"> выбор размера преобразованного изображения.Выбирается один из 2-х размеров: близкий к входному или увеличенный на весь буфер.</p>
<p><img src="but_05.png"> информация о программе.</p>

<h2>Клавиатура</h2>
<p><b>Ctrl+O</b> - открытие файла.</p>
<p><b>Ctrl+S</b> - сохранение файла.</p>
<p><b>1</b>, <b>2</b>, <b>3</b>, <b>4</b> - установка координат указанной точки.</p>
<p><b>&uarr;</b>, <b>&darr;</b>, <b>&larr;</b>, <b>&rarr;</b> - навигация по изображению или пермещение выделенной точки.</p>
<p><b>V</b>, <b>H</b> - поставить/убрать вертикальную/горизонтальную линию. Эти линии нужны для измерения точности выравнивания изображения и в итоговый файл не сохраняються.</p>

<h2>Алгоритм работы программы</h2>
<p>Открывается изображение и из него делается текстура для библиотеки TinyGL. (Если ширина изображения не кратна 2-м в какой-либо степени то оно дополняется пустыми полями с двух сторон до нужной ширины).
Пользователь задает 4 контрольные точки, 5-я точка вычисляется как среднее арифметическое от этих 4-х точек.
Вычисляются текстурные координаты для точек (в пределах от 0 до 1).
Рисуются 4 треугольника по выпрямленным координатам.
Если все устраивает можно сохранять полученное изображение.</p>

<h2>Автор</h2>
<p>IgorA</p>
</body>
</html>